package Padre::Wx::FBP::Document;

## no critic

# This module was generated by Padre::Plugin::FormBuilder::Perl.
# To change this module edit the original .fbp file and regenerate.
# DO NOT MODIFY THIS FILE BY HAND!

use 5.008005;
use utf8;
use strict;
use warnings;
use Padre::Wx ();
use Padre::Wx::Role::Main ();

our $VERSION = '1.02';
our @ISA     = qw{
	Padre::Wx::Role::Main
	Wx::Dialog
};

sub new {
	my $class  = shift;
	my $parent = shift;

	my $self = $class->SUPER::new(
		$parent,
		-1,
		Wx::gettext("Document Information"),
		Wx::DefaultPosition,
		Wx::DefaultSize,
		Wx::DEFAULT_DIALOG_STYLE,
	);

	$self->{filename} = Wx::StaticText->new(
		$self,
		-1,
		'',
	);
	$self->{filename}->SetFont(
		Wx::Font->new( Wx::NORMAL_FONT->GetPointSize, 70, 90, 92, 0, "" )
	);

	my $m_staticline30 = Wx::StaticLine->new(
		$self,
		-1,
		Wx::DefaultPosition,
		Wx::DefaultSize,
		Wx::LI_HORIZONTAL,
	);

	my $m_staticText156 = Wx::StaticText->new(
		$self,
		-1,
		Wx::gettext("Document Type"),
	);

	$self->{document_type} = Wx::StaticText->new(
		$self,
		-1,
		'',
	);

	my $m_staticText158 = Wx::StaticText->new(
		$self,
		-1,
		Wx::gettext("Document Class"),
	);

	$self->{document_class} = Wx::StaticText->new(
		$self,
		-1,
		'',
	);

	my $m_staticText160 = Wx::StaticText->new(
		$self,
		-1,
		Wx::gettext("MIME Type"),
	);

	$self->{mime_type} = Wx::StaticText->new(
		$self,
		-1,
		'',
	);

	my $m_staticText162 = Wx::StaticText->new(
		$self,
		-1,
		Wx::gettext("Encoding"),
	);

	$self->{encoding} = Wx::StaticText->new(
		$self,
		-1,
		'',
	);

	my $m_staticText164 = Wx::StaticText->new(
		$self,
		-1,
		Wx::gettext("Newline Type"),
	);

	$self->{newline_type} = Wx::StaticText->new(
		$self,
		-1,
		'',
	);

	my $m_staticline31 = Wx::StaticLine->new(
		$self,
		-1,
		Wx::DefaultPosition,
		Wx::DefaultSize,
		Wx::LI_HORIZONTAL,
	);

	$self->{document_label} = Wx::StaticText->new(
		$self,
		-1,
		Wx::gettext("Document"),
	);

	$self->{selection_label} = Wx::StaticText->new(
		$self,
		-1,
		Wx::gettext("Selection"),
	);
	$self->{selection_label}->SetForegroundColour(
		Wx::SystemSettings::GetColour( Wx::SYS_COLOUR_GRAYTEXT )
	);

	my $m_staticText168 = Wx::StaticText->new(
		$self,
		-1,
		Wx::gettext("Lines"),
	);

	$self->{document_lines} = Wx::StaticText->new(
		$self,
		-1,
		'',
	);

	$self->{selection_lines} = Wx::StaticText->new(
		$self,
		-1,
		'',
	);

	my $m_staticText171 = Wx::StaticText->new(
		$self,
		-1,
		Wx::gettext("Words"),
	);

	$self->{document_words} = Wx::StaticText->new(
		$self,
		-1,
		'',
	);

	$self->{selection_words} = Wx::StaticText->new(
		$self,
		-1,
		'',
	);

	my $m_staticText174 = Wx::StaticText->new(
		$self,
		-1,
		Wx::gettext("Characters (All)"),
	);

	$self->{document_characters} = Wx::StaticText->new(
		$self,
		-1,
		'',
	);

	$self->{selection_characters} = Wx::StaticText->new(
		$self,
		-1,
		'',
	);

	my $m_staticText177 = Wx::StaticText->new(
		$self,
		-1,
		Wx::gettext("Characters (Visible)"),
	);

	$self->{document_visible} = Wx::StaticText->new(
		$self,
		-1,
		'',
	);

	$self->{selection_visible} = Wx::StaticText->new(
		$self,
		-1,
		'',
	);

	my $m_staticText180 = Wx::StaticText->new(
		$self,
		-1,
		Wx::gettext("File Size (Bytes)"),
	);

	$self->{document_bytes} = Wx::StaticText->new(
		$self,
		-1,
		'',
	);

	$self->{selection_bytes} = Wx::StaticText->new(
		$self,
		-1,
		'',
	);

	my $m_staticText206 = Wx::StaticText->new(
		$self,
		-1,
		Wx::gettext("Source Lines of Code"),
	);

	$self->{document_sloc} = Wx::StaticText->new(
		$self,
		-1,
		'',
	);

	$self->{selection_sloc} = Wx::StaticText->new(
		$self,
		-1,
		'',
	);

	my $m_staticline32 = Wx::StaticLine->new(
		$self,
		-1,
		Wx::DefaultPosition,
		Wx::DefaultSize,
		Wx::LI_HORIZONTAL,
	);

	$self->{cancel} = Wx::Button->new(
		$self,
		Wx::ID_CANCEL,
		Wx::gettext("Close"),
		Wx::DefaultPosition,
		Wx::DefaultSize,
	);
	$self->{cancel}->SetDefault;

	my $fgSizer21 = Wx::FlexGridSizer->new( 5, 2, 0, 10 );
	$fgSizer21->AddGrowableCol(1);
	$fgSizer21->SetFlexibleDirection(Wx::HORIZONTAL);
	$fgSizer21->SetNonFlexibleGrowMode(Wx::FLEX_GROWMODE_SPECIFIED);
	$fgSizer21->Add( $m_staticText156, 0, Wx::ALL, 5 );
	$fgSizer21->Add( $self->{document_type}, 0, Wx::ALL | Wx::EXPAND, 5 );
	$fgSizer21->Add( $m_staticText158, 0, Wx::ALL, 5 );
	$fgSizer21->Add( $self->{document_class}, 0, Wx::ALL | Wx::EXPAND, 5 );
	$fgSizer21->Add( $m_staticText160, 0, Wx::ALL, 5 );
	$fgSizer21->Add( $self->{mime_type}, 0, Wx::ALL | Wx::EXPAND, 5 );
	$fgSizer21->Add( $m_staticText162, 0, Wx::ALL, 5 );
	$fgSizer21->Add( $self->{encoding}, 0, Wx::ALL | Wx::EXPAND, 5 );
	$fgSizer21->Add( $m_staticText164, 0, Wx::ALL, 5 );
	$fgSizer21->Add( $self->{newline_type}, 0, Wx::ALL | Wx::EXPAND, 5 );

	my $fgSizer22 = Wx::FlexGridSizer->new( 2, 3, 0, 10 );
	$fgSizer22->SetFlexibleDirection(Wx::BOTH);
	$fgSizer22->SetNonFlexibleGrowMode(Wx::FLEX_GROWMODE_SPECIFIED);
	$fgSizer22->Add( 0, 0, 1, Wx::EXPAND, 5 );
	$fgSizer22->Add( $self->{document_label}, 0, Wx::ALL, 5 );
	$fgSizer22->Add( $self->{selection_label}, 0, Wx::ALL, 5 );
	$fgSizer22->Add( $m_staticText168, 0, Wx::ALL, 5 );
	$fgSizer22->Add( $self->{document_lines}, 0, Wx::ALIGN_RIGHT | Wx::ALL, 5 );
	$fgSizer22->Add( $self->{selection_lines}, 0, Wx::ALIGN_RIGHT | Wx::ALL, 5 );
	$fgSizer22->Add( $m_staticText171, 0, Wx::ALL, 5 );
	$fgSizer22->Add( $self->{document_words}, 0, Wx::ALIGN_RIGHT | Wx::ALL, 5 );
	$fgSizer22->Add( $self->{selection_words}, 0, Wx::ALIGN_RIGHT | Wx::ALL, 5 );
	$fgSizer22->Add( $m_staticText174, 0, Wx::ALL, 5 );
	$fgSizer22->Add( $self->{document_characters}, 0, Wx::ALIGN_RIGHT | Wx::ALL, 5 );
	$fgSizer22->Add( $self->{selection_characters}, 0, Wx::ALIGN_RIGHT | Wx::ALL, 5 );
	$fgSizer22->Add( $m_staticText177, 0, Wx::ALL, 5 );
	$fgSizer22->Add( $self->{document_visible}, 0, Wx::ALIGN_RIGHT | Wx::ALL, 5 );
	$fgSizer22->Add( $self->{selection_visible}, 0, Wx::ALIGN_RIGHT | Wx::ALL, 5 );
	$fgSizer22->Add( $m_staticText180, 0, Wx::ALL, 5 );
	$fgSizer22->Add( $self->{document_bytes}, 0, Wx::ALIGN_RIGHT | Wx::ALL, 5 );
	$fgSizer22->Add( $self->{selection_bytes}, 0, Wx::ALIGN_RIGHT | Wx::ALL, 5 );
	$fgSizer22->Add( $m_staticText206, 0, Wx::ALL, 5 );
	$fgSizer22->Add( $self->{document_sloc}, 0, Wx::ALIGN_RIGHT | Wx::ALL, 5 );
	$fgSizer22->Add( $self->{selection_sloc}, 0, Wx::ALIGN_RIGHT | Wx::ALL, 5 );

	my $bSizer111 = Wx::BoxSizer->new(Wx::HORIZONTAL);
	$bSizer111->Add( 0, 0, 1, Wx::EXPAND, 5 );
	$bSizer111->Add( $self->{cancel}, 0, Wx::ALL, 5 );

	my $bSizer110 = Wx::BoxSizer->new(Wx::VERTICAL);
	$bSizer110->Add( $self->{filename}, 0, Wx::ALL | Wx::EXPAND, 5 );
	$bSizer110->Add( $m_staticline30, 0, Wx::BOTTOM | Wx::EXPAND, 5 );
	$bSizer110->Add( $fgSizer21, 0, Wx::EXPAND, 5 );
	$bSizer110->Add( $m_staticline31, 0, Wx::BOTTOM | Wx::EXPAND | Wx::TOP, 5 );
	$bSizer110->Add( $fgSizer22, 0, Wx::EXPAND, 5 );
	$bSizer110->Add( $m_staticline32, 0, Wx::EXPAND | Wx::TOP, 5 );
	$bSizer110->Add( $bSizer111, 1, Wx::EXPAND, 5 );

	my $bSizer109 = Wx::BoxSizer->new(Wx::HORIZONTAL);
	$bSizer109->Add( $bSizer110, 1, Wx::EXPAND, 5 );

	$self->SetSizerAndFit($bSizer109);
	$self->Layout;

	return $self;
}

1;

# Copyright 2008-2016 The Padre development team as listed in Padre.pm.
# LICENSE
# This program is free software; you can redistribute it and/or
# modify it under the same terms as Perl 5 itself.

